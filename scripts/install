#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source .fonctions
source /usr/share/yunohost/helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

ynh_check_error	# Active trap pour arrêter le script si une erreur est détectée.

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC
admin_name=$YNH_APP_ARG_ADMIN_NAME
admin_pass=$YNH_APP_ARG_ADMIN_PASS
admin_email=$YNH_APP_ARG_ADMIN_EMAIL

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================

CHECK_USER "$admin_name"	# Vérifie la validité de l'user admin
path_url=$(ynh_normalize_url_path $path_url)	# Vérifie et corrige la syntaxe du path.
CHECK_DOMAINPATH	# Vérifie la disponibilité du path et du domaine.
CHECK_FINALPATH	# Vérifie que le dossier de destination n'est pas déjà utilisé.

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

user="$app"
ynh_app_setting_set "$app" is_public "$is_public"
ynh_app_setting_set "$app" admin_pass "$admin_pass"
ynh_app_setting_set "$app" admin_name "$admin_name"
ynh_app_setting_set "$app" admin_email "$admin_email"

#=================================================
# Check password strength
#=================================================

[[ ${#admin_pass} -gt 5 ]] || ynh_die \
"The password is too weak, it must be longer than 5 characters"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# CREATE A SQL BDD
#=================================================

db_name=$app
db_user=$app
db_pass=$(ynh_string_random)
ynh_mysql_create_db "$db_name" "$db_user" "$db_pass"
ynh_app_setting_set "$app" db_name "$db_name"
ynh_app_setting_set "$app" db_pass "$db_pass"
ynh_app_setting_set "$app" db_user "$db_user"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

final_path=/var/www/$app
ynh_app_setting_set $app final_path $final_path
SETUP_SOURCE	# Télécharge la source, décompresse et copie dans $final_path

#=================================================
# PHP-FPM CONFIGURATION
#=================================================

POOL_FPM

#=================================================
# SPECIFIC SETUP
#=================================================
# Modify the config.yml
#=================================================

sudo rm $final_path/conf/config.default.yml
sed -i "s@db_user@$db_user@g"         ../conf/config.yml
sed -i "s@db_pass@$db_pass@g"         ../conf/config.yml
sed -i "s@db_name@$db_name@g"         ../conf/config.yml
sudo mv ../conf/config.yml $final_path/conf/config.yml

#=================================================
# Installation : Get Composer:
#=================================================

pushd $final_path
sudo php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
sudo php -r "if (hash_file('SHA384', 'composer-setup.php') === '55d6ead61b29c7bdee5cccfb50076874187bd9f21f65d8991d46ec5cc90518f447387fb9f76ebae1fbbacf329e583e30') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
sudo php composer-setup.php
sudo php -r "unlink('composer-setup.php');"
sudo ./composer.phar install --no-dev -o;
# Create database schema
sudo ./bin/roadiz orm:schema-tool:create -n
# Install base fixtures
sudo ./bin/roadiz install -n
# Install DefaultTheme
sudo ./bin/roadiz themes:install -n "/Themes/DefaultTheme/DefaultThemeApp"
# Install DefaultTheme node-type, settings and tags
sudo ./bin/roadiz themes:install -n --data "/Themes/DefaultTheme/DefaultThemeApp"
# Generate node-type Doctrine entities
sudo ./bin/roadiz generate:nsentities
# Update database with new node-types
sudo ./bin/roadiz orm:schema-tool:update -n --force
# Add DefaultTheme node fixtures
sudo ./bin/roadiz themes:install -n --nodes "/Themes/DefaultTheme/DefaultThemeApp"
# Clear caches
sudo ./bin/roadiz cache:clear -e dev
sudo ./bin/roadiz cache:clear -e prod
sudo php ./bin/roadiz cache:clear -e prod --preview
popd

#=================================================
# Set permissions
#=================================================

sudo chown www-data:www-data $final_path -R
sudo chmod 775 $final_path -R
sudo rm $final_path/install.php

#=================================================
# NGINX CONFIGURATION
#=================================================
nginxconf="../conf/nginx.conf"
if [ $path = "/" ]; then
    sed -i "s@YNH_WWW_ROOTPATH@@g" ../conf/nginx.conf
    sed -i "s@YNH_WWW_ROOTAPP@/@g" ../conf/nginx.conf
else
    sed -i "s@YNH_WWW_ROOTPATH@$path@g" ../conf/nginx.conf
    sed -i "s@YNH_WWW_ROOTAPP@$path$path@g" ../conf/nginx.conf
fi
sed -i "s@YNH_WWW_PATH@$path@g" $nginxconf
sed -i "s@YNH_WWW_FINALPATH@$final_path@g" $nginxconf
sed -i "s@YNH_WWW_APP@$app@g" $nginxconf
sed -i "s@APP_URL@$domain$path_url@g" ../conf/nginx.conf
sudo cp $nginxconf /etc/nginx/conf.d/$domain.d/$app.conf
sudo chown root: $nginxconf
sudo chmod 644 $nginxconf

#=================================================
# SETUP SSOWAT
#=================================================

# Make app private if necessary
ynh_app_setting_set "$app" is_public "$is_public"
if [ "$is_public" = "Yes" ];
then
  ynh_app_setting_set "$app" unprotected_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================

sudo service nginx reload
